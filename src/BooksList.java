
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author REYMOND KENNY
 */
public class BooksList extends javax.swing.JFrame {

    /**
     * Creates new form BooksList
     */
    public BooksList() {
        initComponents();
        String query = "SELECT * FROM  `add_book`";
        
        
        
       
       
       Statement st;
       ResultSet rs;
       Connection conn = MyConnection.getConnection();
       try {
           st = conn.createStatement();
           rs = st.executeQuery(query);
           DefaultTableModel model = new DefaultTableModel();
           model.setColumnIdentifiers(new Object[]{"Book ID","Book Name","Book Type","Author Name","Almera No","Row No"});
           Object []coloumn = new Object[6];
           while(rs.next())
           {
               String book = rs.getString("book_id");
               String bookname = rs.getString("book_name");
               String booktype = rs.getString("book_type");
               String authorname = rs.getString("author_name");
               int almerano = rs.getInt("almera_no");
               int rowno = rs.getInt("row_no");
               
     
               coloumn[0]= book;
               coloumn[1]= bookname;
               coloumn[2]= booktype;
               coloumn[3]= authorname;
               coloumn[4]= almerano;
               coloumn[5]= rowno;
               model.addRow(coloumn);    
           }
           jTable2.setModel(model);
           total.setText(String.valueOf(jTable2.getRowCount()));
           if(jTable2.getRowCount()>5)
           {
               total.setBorder(new LineBorder(Color.red,5));
           }
           
       } catch (Exception e) {
           e.printStackTrace();
       }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        borrow = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delet = new javax.swing.JButton();
        search = new javax.swing.JButton();
        ser = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        total = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "book_id", "book_name", "book_type", "author_name", "almera_no", "row_no"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        borrow.setText("Borrow");
        borrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrowActionPerformed(evt);
            }
        });

        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delet.setText("Delete");
        delet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletActionPerformed(evt);
            }
        });

        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        ser.setText("search");

        jLabel1.setText("Total Books");

        total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalActionPerformed(evt);
            }
        });
        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 820, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ser, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(delet)
                                    .addComponent(search)
                                    .addComponent(update)
                                    .addComponent(borrow)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                            .addComponent(total))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                .addComponent(jScrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(borrow)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(update)
                .addGap(18, 18, 18)
                .addComponent(delet)
                .addGap(18, 18, 18)
                .addComponent(search)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void borrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrowActionPerformed
        BorrowBook obj = new BorrowBook();
        obj.setVisible(true);
    }//GEN-LAST:event_borrowActionPerformed

    private void deletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletActionPerformed
 try
        {
            DefaultTableModel model = (DefaultTableModel)jTable2.getModel();
            int i= jTable2.getSelectedRow();
            if(i>=0)
            {
                
                Connection conn = MyConnection.getConnection();  
                PreparedStatement pst = null;
                String query = "DELETE FROM add_book WHERE book_id = ?";
                String bookId =  jTable2.getValueAt(jTable2.getSelectedRow(), 0).toString();
                System.out.println(bookId);
                pst = conn.prepareStatement(query);
                pst.setString(1, bookId);       
                pst.execute();
                model.removeRow(i);
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Please select a row from the table");
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
                                 
    }//GEN-LAST:event_deletActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        String search = ser.getText().toString();
        String query = "SELECT * FROM `add_book` where book_name LIKE '%"+ search +"%'";
        
        
       
       
       Statement st;
       ResultSet rs;
       Connection conn = MyConnection.getConnection();
       try {
           st = conn.createStatement();
           rs = st.executeQuery(query);
           DefaultTableModel model = new DefaultTableModel();
           model.setColumnIdentifiers(new Object[]{"Book ID","Book Name","Book Type","Author Name","Almera No","Row No"});
           Object []coloumn = new Object[6];
           while(rs.next())
           {
               String book = rs.getString("book_id");
               String bookname = rs.getString("book_name");
               String booktype = rs.getString("book_type");
               String authorname = rs.getString("author_name");
               int almerano = rs.getInt("almera_no");
               int rowno = rs.getInt("row_no");
               
     
               coloumn[0]= book;
               coloumn[1]= bookname;
               coloumn[2]= booktype;
               coloumn[3]= authorname;
               coloumn[4]= almerano;
               coloumn[5]= rowno;
               model.addRow(coloumn);    
           }
           jTable2.setModel(model);
           
       } catch (Exception e) {
           e.printStackTrace();
       }
    }//GEN-LAST:event_searchActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
         
        String bookid = jTable2.getValueAt(jTable2.getSelectedRow(),0).toString();
         String bookname = jTable2.getValueAt(jTable2.getSelectedRow(),1).toString();
          String booktype = jTable2.getValueAt(jTable2.getSelectedRow(),2).toString();
           String authorname = jTable2.getValueAt(jTable2.getSelectedRow(),3).toString();
            int almerano = Integer.parseInt( jTable2.getValueAt(jTable2.getSelectedRow(),4).toString());
             int rowno = Integer.parseInt(jTable2.getValueAt(jTable2.getSelectedRow(),5).toString());
             
             Update  up = new Update();
             up.bookdata(bookid,booktype,bookname,authorname,almerano,rowno);
             
            setVisible(false);
        up.setVisible(true);
             
       
    }//GEN-LAST:event_updateActionPerformed

    private void totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BooksList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BooksList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BooksList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BooksList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BooksList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton borrow;
    private javax.swing.JButton delet;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton search;
    private javax.swing.JTextField ser;
    private javax.swing.JTextField total;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
